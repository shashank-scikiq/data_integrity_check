{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "df=pd.read_csv(\"data.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>network_order_id</th>\n",
       "      <th>sub_category</th>\n",
       "      <th>seller_np</th>\n",
       "      <th>total_items</th>\n",
       "      <th>domain</th>\n",
       "      <th>provider_key</th>\n",
       "      <th>order_status</th>\n",
       "      <th>seller_pincode</th>\n",
       "      <th>delivery_pincode</th>\n",
       "      <th>order_date</th>\n",
       "      <th>categories</th>\n",
       "      <th>consolidated_categories</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>75753814</td>\n",
       "      <td>F&amp;B</td>\n",
       "      <td>webapi.magicpin.in/oms_partner/ondc</td>\n",
       "      <td>1</td>\n",
       "      <td>Retail</td>\n",
       "      <td>webapi.magicpin.in/oms_partner/ondc-12379276</td>\n",
       "      <td>Completed</td>\n",
       "      <td>560037.0</td>\n",
       "      <td>560066</td>\n",
       "      <td>01-01-2024</td>\n",
       "      <td>{\"sub_category\": \"F&amp;B\", \"consolidated_category...</td>\n",
       "      <td>F&amp;B</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>75629738</td>\n",
       "      <td>F&amp;B</td>\n",
       "      <td>webapi.magicpin.in/oms_partner/ondc</td>\n",
       "      <td>3</td>\n",
       "      <td>Retail</td>\n",
       "      <td>webapi.magicpin.in/oms_partner/ondc-44866678</td>\n",
       "      <td>Completed</td>\n",
       "      <td>110092.0</td>\n",
       "      <td>110092</td>\n",
       "      <td>01-01-2024</td>\n",
       "      <td>{\"sub_category\": \"F&amp;B\", \"consolidated_category...</td>\n",
       "      <td>F&amp;B</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>75758854</td>\n",
       "      <td>F&amp;B</td>\n",
       "      <td>webapi.magicpin.in/oms_partner/ondc</td>\n",
       "      <td>3</td>\n",
       "      <td>Retail</td>\n",
       "      <td>webapi.magicpin.in/oms_partner/ondc-996039</td>\n",
       "      <td>Completed</td>\n",
       "      <td>411046.0</td>\n",
       "      <td>411046</td>\n",
       "      <td>01-01-2024</td>\n",
       "      <td>{\"sub_category\": \"F&amp;B\", \"consolidated_category...</td>\n",
       "      <td>F&amp;B</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>75849135</td>\n",
       "      <td>F&amp;B</td>\n",
       "      <td>webapi.magicpin.in/oms_partner/ondc</td>\n",
       "      <td>2</td>\n",
       "      <td>Retail</td>\n",
       "      <td>webapi.magicpin.in/oms_partner/ondc-9027459</td>\n",
       "      <td>Completed</td>\n",
       "      <td>560070.0</td>\n",
       "      <td>560078</td>\n",
       "      <td>01-01-2024</td>\n",
       "      <td>{\"sub_category\": \"F&amp;B\", \"consolidated_category...</td>\n",
       "      <td>F&amp;B</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>336CAE5C05AC0EF45D18A9E9DDA036E5</td>\n",
       "      <td>Snacks &amp; Branded Foods</td>\n",
       "      <td>ondcmp.nlincs.in</td>\n",
       "      <td>3</td>\n",
       "      <td>Retail</td>\n",
       "      <td>ondcmp.nlincs.in-27478</td>\n",
       "      <td>Completed</td>\n",
       "      <td>600028.0</td>\n",
       "      <td>505001</td>\n",
       "      <td>01-01-2024</td>\n",
       "      <td>{\"sub_category\": \"Snacks &amp; Branded Foods\", \"co...</td>\n",
       "      <td>Grocery</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   network_order_id            sub_category  \\\n",
       "0                          75753814                     F&B   \n",
       "1                          75629738                     F&B   \n",
       "2                          75758854                     F&B   \n",
       "3                          75849135                     F&B   \n",
       "4  336CAE5C05AC0EF45D18A9E9DDA036E5  Snacks & Branded Foods   \n",
       "\n",
       "                             seller_np  total_items  domain  \\\n",
       "0  webapi.magicpin.in/oms_partner/ondc            1  Retail   \n",
       "1  webapi.magicpin.in/oms_partner/ondc            3  Retail   \n",
       "2  webapi.magicpin.in/oms_partner/ondc            3  Retail   \n",
       "3  webapi.magicpin.in/oms_partner/ondc            2  Retail   \n",
       "4                     ondcmp.nlincs.in            3  Retail   \n",
       "\n",
       "                                   provider_key order_status  seller_pincode  \\\n",
       "0  webapi.magicpin.in/oms_partner/ondc-12379276    Completed        560037.0   \n",
       "1  webapi.magicpin.in/oms_partner/ondc-44866678    Completed        110092.0   \n",
       "2    webapi.magicpin.in/oms_partner/ondc-996039    Completed        411046.0   \n",
       "3   webapi.magicpin.in/oms_partner/ondc-9027459    Completed        560070.0   \n",
       "4                        ondcmp.nlincs.in-27478    Completed        600028.0   \n",
       "\n",
       "  delivery_pincode  order_date  \\\n",
       "0           560066  01-01-2024   \n",
       "1           110092  01-01-2024   \n",
       "2           411046  01-01-2024   \n",
       "3           560078  01-01-2024   \n",
       "4           505001  01-01-2024   \n",
       "\n",
       "                                          categories consolidated_categories  \n",
       "0  {\"sub_category\": \"F&B\", \"consolidated_category...                     F&B  \n",
       "1  {\"sub_category\": \"F&B\", \"consolidated_category...                     F&B  \n",
       "2  {\"sub_category\": \"F&B\", \"consolidated_category...                     F&B  \n",
       "3  {\"sub_category\": \"F&B\", \"consolidated_category...                     F&B  \n",
       "4  {\"sub_category\": \"Snacks & Branded Foods\", \"co...                 Grocery  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "56661"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Checking null values\n",
    "result_series=df.isnull().sum()   "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "result_df = pd.DataFrame(result_series, columns=['Null_Count'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [],
   "source": [
    "result_df.to_excel('output1.xlsx', index=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "# length of delivery_pincode  greater than 6\n",
    "\n",
    "df['delivery_pincode'] = df['delivery_pincode'].astype(str)\n",
    "\n",
    "\n",
    "a = df['delivery_pincode'].apply(lambda x: len(x) > 6)\n",
    "\n",
    "pincode_counts_delivery = df[a]['delivery_pincode'].value_counts()\n",
    "\n",
    "# Create a DataFrame from the Series\n",
    "result_df_delivery = pd.DataFrame({'Delivery_Pincode': pincode_counts_delivery.index, 'Count': pincode_counts_delivery.values})\n",
    "\n",
    "# Saving the DataFrame to an Excel file\n",
    "result_df_delivery.to_excel('delivery_pincode_counts.xlsx', index=False)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "seller_pincode\n",
      "122002.0    1284\n",
      "201301.0     928\n",
      "425408.0     879\n",
      "110092.0     876\n",
      "400103.0     845\n",
      "            ... \n",
      "147002.0       1\n",
      "700021.0       1\n",
      "131021.0       1\n",
      "396230.0       1\n",
      "200201.0       1\n",
      "Name: count, Length: 1273, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "#  length of seller_pincode is greater than 6\n",
    "\n",
    "df['seller_pincode'] = df['seller_pincode'].astype(str)\n",
    "\n",
    "\n",
    "b = df['seller_pincode'].apply(lambda x: len(x) > 6)\n",
    "\n",
    "# Use value_counts to count the occurrences of each unique seller_pincode\n",
    "pincode_counts = df[b]['seller_pincode'].value_counts()\n",
    "\n",
    "# Print the unique seller_pincode along with their counts\n",
    "print(pincode_counts)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "result_df_seller = pd.DataFrame({'Pincode': pincode_counts.index, 'Count': pincode_counts.values})\n",
    "\n",
    "# Save the DataFrame to an Excel file\n",
    "result_df.to_excel('value.xlsx', index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['F&B',\n",
       " 'Snacks & Branded Foods',\n",
       " 'Gourmet & World Foods',\n",
       " 'Home Decor',\n",
       " nan,\n",
       " 'Desktop and Laptop',\n",
       " 'Masala & Seasoning',\n",
       " \"Men's Fashion Accessories\",\n",
       " 'Home Furnishings',\n",
       " \"Men's Topwear\",\n",
       " \"Men's Footwear\",\n",
       " 'Beauty & Hygiene',\n",
       " 'Oil & Ghee',\n",
       " \"Women's Western Wear\",\n",
       " 'Bath & Body',\n",
       " 'Cookware and Dining',\n",
       " 'Fruits and Vegetables',\n",
       " \"Men's Grooming\",\n",
       " 'Personal and Baby Care',\n",
       " 'Skin Care',\n",
       " 'Cleaning & Household',\n",
       " 'Lighting & Electric Fans',\n",
       " 'Health Devices',\n",
       " \"Men's Footwear Accessories\",\n",
       " 'Mobile Accessories',\n",
       " 'Hair Care',\n",
       " \"Women's Indian & Fusion Wear\",\n",
       " 'Nutrition and Supplements',\n",
       " 'Tools & Accessories',\n",
       " \"Women's Fashion Accessories\",\n",
       " 'Fragrance',\n",
       " \"Men's Bottomwear\",\n",
       " \"Boy's Clothing\",\n",
       " 'Earphone',\n",
       " 'Kitchen Appliances',\n",
       " \"Men's Bags & Luggage\",\n",
       " 'Foodgrains',\n",
       " 'Oral Care',\n",
       " \"Women's Jewellery\",\n",
       " 'Make Up',\n",
       " 'Packaged Foods',\n",
       " 'Speaker',\n",
       " 'Beverages',\n",
       " 'Infant Bath Accessories',\n",
       " \"Men's Innerwear & Sleepwear\",\n",
       " 'Bakery, Cakes & Dairy',\n",
       " 'Infant Care & Accessories',\n",
       " \"Infant's Wear\",\n",
       " 'Health, Home and Personal Care',\n",
       " \"Women's Footwear\",\n",
       " 'Gastric and Other Concerns',\n",
       " 'Salt, Sugar and Jaggery',\n",
       " \"Men's Jewellery\",\n",
       " 'Eggs, Meat & Fish',\n",
       " 'Skin Care - Lotions, Moisturisers, and Creams',\n",
       " \"Girl's Clothing\",\n",
       " 'Feminine Care',\n",
       " \"Men's Eyewear\",\n",
       " 'Kitchen Accessories',\n",
       " 'Computer Peripheral',\n",
       " \"Kid's Fashion Accessories\",\n",
       " 'Audio',\n",
       " 'Snacks, Dry Fruits, Nuts',\n",
       " \"Boy's Footwear\",\n",
       " 'Skin Care - Face Cleansers',\n",
       " 'Heaters',\n",
       " 'Stationery',\n",
       " 'Shampoos and Conditioners',\n",
       " 'Dals & Pulses',\n",
       " \"Women's Footwear Accessories\",\n",
       " 'Packaged Commodities',\n",
       " 'Baby Care',\n",
       " 'Home Improvement',\n",
       " 'Mobile Phone',\n",
       " 'Headphone',\n",
       " \"Girl's Footwear\",\n",
       " 'Rice',\n",
       " 'Pain Relieving Ointments',\n",
       " 'Smart Watches',\n",
       " 'Healthcare Devices',\n",
       " 'Indian Sweets',\n",
       " 'Sexual Wellness',\n",
       " '{\"id\":\"F&B\"}',\n",
       " 'Disinfectant & Cleaners',\n",
       " 'Body Care - Cleansers',\n",
       " 'Tea',\n",
       " 'Cleaning Supplies']"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Sub-Category\n",
    "unique_items = df[\"sub_category\"].unique()\n",
    "\n",
    "[x for x in unique_items]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "sub_category\n",
      "F&B                                              32832\n",
      "Home Decor                                        2918\n",
      "Men's Footwear                                    1526\n",
      "Snacks & Branded Foods                            1137\n",
      "Cookware and Dining                                902\n",
      "Men's Fashion Accessories                          832\n",
      "Men's Topwear                                      768\n",
      "Women's Indian & Fusion Wear                       755\n",
      "Nutrition and Supplements                          692\n",
      "Skin Care                                          676\n",
      "Tools & Accessories                                638\n",
      "Health Devices                                     629\n",
      "Men's Grooming                                     623\n",
      "Earphone                                           620\n",
      "Foodgrains                                         514\n",
      "Gourmet & World Foods                              464\n",
      "Personal and Baby Care                             463\n",
      "Hair Care                                          443\n",
      "Cleaning & Household                               438\n",
      "Fruits and Vegetables                              436\n",
      "Men's Footwear Accessories                         395\n",
      "Masala & Seasoning                                 387\n",
      "Women's Western Wear                               386\n",
      "Lighting & Electric Fans                           379\n",
      "Oil & Ghee                                         368\n",
      "Mobile Accessories                                 309\n",
      "Women's Jewellery                                  307\n",
      "Home Furnishings                                   302\n",
      "Men's Bottomwear                                   299\n",
      "Oral Care                                          292\n",
      "Beauty & Hygiene                                   287\n",
      "Bakery, Cakes & Dairy                              242\n",
      "Make Up                                            207\n",
      "Women's Footwear                                   197\n",
      "Women's Fashion Accessories                        192\n",
      "Beverages                                          180\n",
      "Boy's Clothing                                     112\n",
      "Health, Home and Personal Care                     110\n",
      "Men's Bags & Luggage                               108\n",
      "Girl's Clothing                                     91\n",
      "Kitchen Appliances                                  89\n",
      "Men's Innerwear & Sleepwear                         86\n",
      "Infant Bath Accessories                             76\n",
      "Infant Care & Accessories                           68\n",
      "Men's Eyewear                                       68\n",
      "Salt, Sugar and Jaggery                             59\n",
      "Eggs, Meat & Fish                                   58\n",
      "Fragrance                                           55\n",
      "Bath & Body                                         53\n",
      "Men's Jewellery                                     53\n",
      "Kitchen Accessories                                 48\n",
      "Feminine Care                                       40\n",
      "Computer Peripheral                                 36\n",
      "Speaker                                             34\n",
      "Infant's Wear                                       31\n",
      "Snacks, Dry Fruits, Nuts                            31\n",
      "Kid's Fashion Accessories                           25\n",
      "Boy's Footwear                                      16\n",
      "Gastric and Other Concerns                          12\n",
      "Packaged Foods                                      11\n",
      "Shampoos and Conditioners                            8\n",
      "Home Improvement                                     8\n",
      "Smart Watches                                        8\n",
      "Pain Relieving Ointments                             7\n",
      "Girl's Footwear                                      7\n",
      "Heaters                                              6\n",
      "Audio                                                6\n",
      "Stationery                                           5\n",
      "Skin Care - Face Cleansers                           5\n",
      "Skin Care - Lotions, Moisturisers, and Creams        4\n",
      "Dals & Pulses                                        4\n",
      "Desktop and Laptop                                   4\n",
      "Mobile Phone                                         3\n",
      "Sexual Wellness                                      3\n",
      "Baby Care                                            2\n",
      "Packaged Commodities                                 2\n",
      "Healthcare Devices                                   2\n",
      "Indian Sweets                                        2\n",
      "{\"id\":\"F&B\"}                                         2\n",
      "Headphone                                            1\n",
      "Rice                                                 1\n",
      "Women's Footwear Accessories                         1\n",
      "Disinfectant & Cleaners                              1\n",
      "Body Care - Cleansers                                1\n",
      "Tea                                                  1\n",
      "Cleaning Supplies                                    1\n",
      "Name: count, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(df[\"sub_category\"].value_counts())\n",
    "#pd.set_option('display.max_rows', None)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
